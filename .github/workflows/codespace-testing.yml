name: Codespace Testing

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'tests/**'
      - '.devcontainer/**'
  workflow_dispatch:

jobs:
  codespace-testing:
    runs-on: ubuntu-latest
    name: Run Tests in Codespace Environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup GitHub CLI
      run: |
        # GitHub CLI is already installed in GitHub Actions runners
        gh --version

    - name: Create Codespace
      id: create-codespace
      run: |
        echo "Creating Codespace for testing..."
        CODESPACE_NAME="testing-${{ github.run_number }}"
        echo "codespace-name=$CODESPACE_NAME" >> $GITHUB_OUTPUT

        # Create Codespace using GitHub CLI
        gh codespace create \
          --repo ${{ github.repository }} \
          --branch ${{ github.head_ref }} \
          --machine basicLinux32gb \
          --display-name "$CODESPACE_NAME" \
          --idle-timeout 15m

        echo "Codespace created: $CODESPACE_NAME"

    - name: Wait for Codespace to be ready
      run: |
        echo "Waiting for Codespace to be ready..."
        sleep 30

    - name: Setup Development Environment
      run: |
        echo "Setting up development environment in Codespace..."

        # Initialize development environment
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make dev-init"

        # Build development images
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make dev-build"

    - name: Start Services
      run: |
        echo "Starting development services..."

        # Start development environment
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make dev-up"

        # Wait for services to be healthy
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make dev-validate"

    - name: Run Tests
      run: |
        echo "Running tests in Codespace environment..."

        # Run atomic tests
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make test-atomic"

        # Run unit tests
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make test-unit"

        # Run integration tests
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make test-integration"

    - name: Test Hot Reloading
      run: |
        echo "Testing hot reloading functionality..."

        # Create a test file change
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace/backend && echo '# Test change' >> test_hot_reload.py"

        # Verify the change is reflected
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && ls backend/test_hot_reload.py"

        # Clean up test file
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace/backend && rm test_hot_reload.py"

    - name: Test CLI Commands
      run: |
        echo "Testing CLI commands..."

        # Test CLI help
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && poetry run python -m rag_solution.cli.main --help"

        # Test health check
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && poetry run python -m rag_solution.cli.main health check"

    - name: Cleanup Services
      if: always()
      run: |
        echo "Cleaning up services..."
        gh codespace ssh --codespace ${{ steps.create-codespace.outputs.codespace-name }} --command "cd /workspace && make dev-down"

    - name: Cleanup Codespace
      if: always()
      run: |
        echo "Cleaning up Codespace..."
        gh codespace delete --codespace ${{ steps.create-codespace.outputs.codespace-name }} --force

    - name: Test Results
      run: |
        echo "âœ… Codespace testing completed successfully!"
        echo "All tests passed in Codespace environment."
