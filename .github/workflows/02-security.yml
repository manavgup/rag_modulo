name: Security Scan

# 📋 Purpose
# Scan codebase for secrets and credentials using Gitleaks and TruffleHog
# Runs on every PR and push to main to catch leaked secrets early

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

# 🔄 Concurrency Control
# Cancel outdated workflow runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

jobs:
  gitleaks:
    name: 🔐 Gitleaks Secret Scanning
    runs-on: ubuntu-latest
    steps:
      # 0️⃣ Checkout source code with full history for secret scanning
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to scan all commits

      # 1️⃣ Run Gitleaks to detect secrets in git history
      - name: 🔍 Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITLEAKS_CONFIG: .gitleaks.toml
          GITLEAKS_ENABLE_UPLOAD: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trufflehog:
    name: 🐷 TruffleHog Secret Scanning
    runs-on: ubuntu-latest
    steps:
      # 0️⃣ Checkout source code with full history
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for differential scanning

      # 1️⃣ Run TruffleHog to detect verified secrets
      - name: 🔍 Run TruffleHog
        uses: trufflesecurity/trufflehog@v3.63.4
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
          extra_args: --only-verified  # Only flag verified secrets
