name: Poetry Lock Validation

# This workflow validates that poetry.lock is in sync with pyproject.toml
# Triggers when dependency files are modified

on:
  pull_request:
    paths:
      - 'pyproject.toml'
      - 'poetry.lock'
  push:
    branches: [main, develop]
    paths:
      - 'pyproject.toml'
      - 'poetry.lock'

permissions:
  contents: read

jobs:
  validate-lock:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: false

      - name: Validate poetry.lock is in sync
        run: |
          echo "üîç Checking if poetry.lock is in sync with pyproject.toml..."

          if poetry check --lock; then
            echo "‚úÖ poetry.lock is in sync with pyproject.toml"
          else
            echo ""
            echo "‚ùå ERROR: poetry.lock is out of sync with pyproject.toml"
            echo ""
            echo "This means dependencies in pyproject.toml have been modified"
            echo "but poetry.lock was not regenerated."
            echo ""
            echo "To fix this:"
            echo "  1. poetry lock"
            echo "  2. git add poetry.lock"
            echo "  3. git commit -m 'chore: update poetry.lock'"
            echo "  4. git push"
            echo ""
            exit 1
          fi

      - name: Check for dependency conflicts
        run: |
          echo "üîç Checking for dependency conflicts..."
          poetry check
          echo "‚úÖ No dependency conflicts detected"
