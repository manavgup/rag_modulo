{
  "info": {
    "name": "RAG Modulo API",
    "description": "API tests for RAG Modulo project",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "backend_base_url",
      "value": "http://localhost:8000"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response is empty object\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('object').that.is.empty;",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{backend_base_url}}/api/health",
          "host": ["{{backend_base_url}}"],
          "path": ["api", "health"]
        }
      },
      "response": []
    },
    {
      "name": "Create User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has correct structure\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('ibm_id');",
              "    pm.expect(jsonData).to.have.property('email');",
              "    pm.expect(jsonData).to.have.property('name');",
              "});",
              "",
              "pm.environment.set(\"user_id\", pm.response.json().id);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"ibm_id\": \"test_user_{{$randomUUID}}\",\n    \"email\": \"test_{{$randomUUID}}@example.com\",\n    \"name\": \"Test User {{$randomUUID}}\"\n}"
        },
        "url": {
          "raw": "{{backend_base_url}}/api/users/",
          "host": ["{{backend_base_url}}"],
          "path": ["api", "users", ""]
        }
      },
      "response": []
    },
    {
      "name": "Create Collection",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has correct structure\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('name');",
              "    pm.expect(jsonData).to.have.property('is_private');",
              "    pm.expect(jsonData).to.have.property('user_ids');",
              "});",
              "",
              "pm.environment.set(\"collection_id\", pm.response.json().id);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Test Collection {{$randomUUID}}\",\n    \"is_private\": true,\n    \"users\": [\"{{user_id}}\"]\n}"
        },
        "url": {
          "raw": "{{backend_base_url}}/api/collections/create",
          "host": ["{{backend_base_url}}"],
          "path": ["api", "collections", "create"]
        }
      },
      "response": []
    }
  ]
}
