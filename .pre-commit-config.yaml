# Pre-commit hooks configuration
repos:
  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags in GitHub Actions
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-toml
      - id: check-json
      - id: debug-statements  # Find forgotten print/pdb statements
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python linting and formatting - Ruff (fast, modern, handles both)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.11
    hooks:
      - id: ruff
        args: ['--fix', '--exit-non-zero-on-fix', '--line-length=120']
        files: ^backend/
      - id: ruff-format
        args: ['--line-length=120']
        files: ^backend/
        
  # Python type checking - MyPy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [
          '--ignore-missing-imports',
          '--disable-error-code=misc',
          '--disable-error-code=unused-ignore',
          '--no-strict-optional'
        ]
        additional_dependencies:
          - pydantic>=2.0
          - types-setuptools
          - types-PyYAML
          - sqlalchemy-stubs
        files: ^backend/
        pass_filenames: true

  # GitHub Workflow validation
  - repo: https://github.com/sirosen/check-jsonschema
    rev: 0.28.0
    hooks:
      - id: check-github-workflows
        args: ["--verbose"]

  # Local validation
  - repo: local
    hooks:
      - id: validate-ci-locally
        name: Validate CI workflows can run locally
        entry: ./scripts/validate-ci.sh
        language: script
        files: ^\.github/workflows/.*\.ya?ml$
        pass_filenames: false
        
      - id: python-poetry-check
        name: Check poetry configuration
        entry: bash -c 'cd backend && poetry check'
        language: system
        files: ^backend/(pyproject\.toml|poetry\.lock)$
        pass_filenames: false