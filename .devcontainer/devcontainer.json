{
  "name": "RAG Modulo Development",
  "dockerComposeFile": "../docker-compose.dev.yml",
  "service": "backend",
  "workspaceFolder": "/workspace",
  
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "charliermarsh.ruff",
        "ms-azuretools.vscode-docker",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-vscode.makefile-tools",
        "github.copilot",
        "github.copilot-chat",
        "ms-python.debugpy",
        "ms-python.flake8",
        "ms-python.mypy-type-checker",
        "ms-python.pylint",
        "ms-toolsai.jupyter",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.ruffEnabled": true,
        "python.formatting.provider": "none",
        "python.formatting.ruffEnabled": true,
        "python.analysis.typeCheckingMode": "basic",
        "python.analysis.autoImportCompletions": true,
        "python.analysis.autoSearchPaths": true,
        "python.analysis.extraPaths": [
          "/workspace/backend",
          "/app",
          "/app/rag_solution",
          "/app/vectordbs"
        ],
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true,
          "**/.pytest_cache": true,
          "**/.mypy_cache": true
        },
        "files.watcherExclude": {
          "**/__pycache__/**": true,
          "**/.pytest_cache/**": true,
          "**/.mypy_cache/**": true,
          "**/node_modules/**": true
        },
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit",
          "source.fixAll.ruff": "explicit"
        },
        "terminal.integrated.defaultProfile.linux": "bash",
        "makefile.launchConfigurations": [
          {
            "cwd": "/workspace",
            "binaryPath": "make",
            "binaryArgs": ["dev-status"]
          }
        ]
      }
    }
  },

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": false,
      "installOhMyZsh": false,
      "upgradePackages": true,
      "username": "root",
      "uid": "0",
      "gid": "0",
      "installTools": "make,curl,wget,git,unzip,ca-certificates"
    }
  },


  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8000, 3000, 5001, 5432, 19530],
  "portsAttributes": {
    "8000": {
      "label": "Backend API",
      "onAutoForward": "notify"
    },
    "3000": {
      "label": "Frontend",
      "onAutoForward": "notify"
    },
    "5001": {
      "label": "MLflow",
      "onAutoForward": "silent"
    },
    "5432": {
      "label": "PostgreSQL",
      "onAutoForward": "silent"
    },
    "19530": {
      "label": "Milvus",
      "onAutoForward": "silent"
    }
  },

  // Configure tool-specific properties
  "postStartCommand": "echo 'RAG Modulo development environment ready!'",

  // Use root user to avoid permission issues with VS Code server
  "remoteUser": "root",
  "remoteEnv": {
    "PYTHONPATH": "/app:/app/rag_solution:/app/vectordbs",
    "DEVELOPMENT_MODE": "true",
    "TESTING": "true",
    "SKIP_AUTH": "true"
  },

  // Configure container lifecycle
  "shutdownAction": "stopCompose",

  // Codespaces-specific optimizations
  "onCreateCommand": "echo 'Codespace environment ready!'",
  "updateContentCommand": "echo 'Updating Codespace environment...'",
  "postCreateCommand": "mkdir -p /root/.vscode-server && chmod 755 /root/.vscode-server && apt-get update && apt-get install -y make curl && echo 'VS Code server directory created and make installed'"
}
