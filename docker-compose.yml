services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    networks:
      - app-network
    command: ["/entrypoint.sh"]
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      milvus-standalone:
        condition: service_started
    environment:
      - PYTHONPATH=/app
      - COLLECTIONDB_NAME=${COLLECTIONDB_NAME}
      - COLLECTIONDB_USER=${COLLECTIONDB_USER}
      - COLLECTIONDB_PASS=${COLLECTIONDB_PASS}
      - COLLECTIONDB_HOST=postgres
      - COLLECTIONDB_PORT=${COLLECTIONDB_PORT}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./webui
      dockerfile: Dockerfile.frontend
    networks:
      - app-network
    ports:
      - "3000:80"
    depends_on:
      - backend

  postgres:
    image: postgres:13
    networks:
      - app-network
    container_name: ${COLLECTIONDB_HOST}
    environment:
      POSTGRES_DB: ${COLLECTIONDB_NAME}
      POSTGRES_USER: ${COLLECTIONDB_USER}
      POSTGRES_PASSWORD: ${COLLECTIONDB_PASS}
      COLLECTIONDB_NAME: ${COLLECTIONDB_NAME}
      COLLECTIONDB_USER: ${COLLECTIONDB_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${COLLECTIONDB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${COLLECTIONDB_USER} -d ${COLLECTIONDB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  etcd:
    container_name: milvus-etcd
    image: bitnami/etcd:latest
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    volumes:
      - etcd_data:/bitnami/etcd
    networks:
      - app-network

  minio:
    container_name: milvus-minio
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio_data:/data
    command: minio server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "19530:19530"
    depends_on:
      - "etcd"
      - "minio"
    networks:
      - app-network

volumes:
  postgres_data:
  etcd_data:
  minio_data:
  milvus_data:

networks:
  app-network:
    driver: bridge