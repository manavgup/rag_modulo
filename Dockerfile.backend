# Build stage
FROM python:3.12-slim AS builder

WORKDIR /app

# Install system dependencies including Rust
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    curl \
    && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
    && . $HOME/.cargo/env

# Add Rust to PATH
ENV PATH="/root/.cargo/bin:${PATH}"

# Verify Rust installation
RUN rustc --version && cargo --version

COPY requirements.txt requirements_backend.txt ./
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt -r requirements_backend.txt

# Downgrade protobuf to resolve version conflict
RUN pip install --no-cache-dir protobuf==3.20.3

# Final stage
FROM python:3.12-slim

WORKDIR /app

# Install runtime dependencies and debugging tools
RUN apt-get update && apt-get install -y \
    libpq5 \
    procps \
    iputils-ping \
    net-tools \
    iproute2 \
    curl \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

COPY backend /app/backend

# Add a delay and check permissions
RUN sleep 2 && \
    echo "Contents of /app/backend:" && \
    ls -R /app/backend && \
    echo "Permissions of /app/backend:" && \
    ls -la /app/backend && \
    chmod -R 755 /app/backend
    
COPY main.py /app/main.py
COPY .env /app/.env

ENV PYTHONPATH=/app

# Create entrypoint script
RUN echo '#!/bin/bash\n\
set -ex\n\
echo "Starting entrypoint script"\n\
echo "Current directory: $(pwd)"\n\
echo "Contents of /app:"\n\
ls -la /app\n\
echo "Contents of /app/backend:"\n\
ls -la /app/backend\n\
echo "Contents of /app/backend/core:"\n\
ls -la /app/backend/core\n\
echo "Python path:"\n\
python -c "import sys; print(sys.path)"\n\
echo "Trying to import backend.core:"\n\
python -c "import backend.core" || { echo "Failed to import backend.core"; }\n\
echo "Trying to import backend.core.config:"\n\
python -c "import backend.core.config" || { echo "Failed to import backend.core.config"; }\n\
echo "Trying to import main module:"\n\
python -c "import main" || { echo "Failed to import main module"; ls -la /app/main.py; cat /app/main.py; }\n\
echo "Network information:"\n\
ip addr\n\
echo "Environment variables:"\n\
env | grep COLLECTIONDB\n\
echo "Trying to ping postgres:"\n\
ping -c 4 postgres || echo "Failed to ping postgres"\n\
echo "Running main.py:"\n\
python /app/main.py\n\
' > /entrypoint.sh && chmod +x /entrypoint.sh

CMD ["/entrypoint.sh"]

EXPOSE 8000